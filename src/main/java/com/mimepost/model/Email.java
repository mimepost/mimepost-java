/*
 * MimePost API Reference (Beta)
 * MimePost API for sending email.  You can find out more about MimePost at [https://mimepost.com](http://mimepost.com). For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@mimepost.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mimepost.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mimepost.model.EmailAttachments;
import com.mimepost.model.EmailGlobalMergeVars;
import com.mimepost.model.EmailTo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Email
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-02-20T12:32:16.156+05:30")
public class Email {
  @SerializedName("html")
  private String html = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("from_email")
  private String fromEmail = null;

  @SerializedName("from_name")
  private String fromName = null;

  @SerializedName("global_merge_vars")
  private List<EmailGlobalMergeVars> globalMergeVars = null;

  @SerializedName("to")
  private List<EmailTo> to = new ArrayList<EmailTo>();

  @SerializedName("cc")
  private List<String> cc = null;

  @SerializedName("bcc")
  private List<String> bcc = null;

  @SerializedName("attachments")
  private List<EmailAttachments> attachments = null;

  @SerializedName("vars")
  private Map<String, String> vars = null;

  public Email html(String html) {
    this.html = html;
    return this;
  }

   /**
   * Get html
   * @return html
  **/
  @ApiModelProperty(example = "<p>This is an example html content</p>", required = true, value = "")
  public String getHtml() {
    return html;
  }

  public void setHtml(String html) {
    this.html = html;
  }

  public Email subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @ApiModelProperty(example = "This is an example subject", required = true, value = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public Email fromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
    return this;
  }

   /**
   * Get fromEmail
   * @return fromEmail
  **/
  @ApiModelProperty(example = "from@example.com", required = true, value = "")
  public String getFromEmail() {
    return fromEmail;
  }

  public void setFromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
  }

  public Email fromName(String fromName) {
    this.fromName = fromName;
    return this;
  }

   /**
   * Get fromName
   * @return fromName
  **/
  @ApiModelProperty(example = "Sender Name", value = "")
  public String getFromName() {
    return fromName;
  }

  public void setFromName(String fromName) {
    this.fromName = fromName;
  }

  public Email globalMergeVars(List<EmailGlobalMergeVars> globalMergeVars) {
    this.globalMergeVars = globalMergeVars;
    return this;
  }

  public Email addGlobalMergeVarsItem(EmailGlobalMergeVars globalMergeVarsItem) {
    if (this.globalMergeVars == null) {
      this.globalMergeVars = new ArrayList<EmailGlobalMergeVars>();
    }
    this.globalMergeVars.add(globalMergeVarsItem);
    return this;
  }

   /**
   * Get globalMergeVars
   * @return globalMergeVars
  **/
  @ApiModelProperty(value = "")
  public List<EmailGlobalMergeVars> getGlobalMergeVars() {
    return globalMergeVars;
  }

  public void setGlobalMergeVars(List<EmailGlobalMergeVars> globalMergeVars) {
    this.globalMergeVars = globalMergeVars;
  }

  public Email to(List<EmailTo> to) {
    this.to = to;
    return this;
  }

  public Email addToItem(EmailTo toItem) {
    this.to.add(toItem);
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @ApiModelProperty(required = true, value = "")
  public List<EmailTo> getTo() {
    return to;
  }

  public void setTo(List<EmailTo> to) {
    this.to = to;
  }

  public Email cc(List<String> cc) {
    this.cc = cc;
    return this;
  }

  public Email addCcItem(String ccItem) {
    if (this.cc == null) {
      this.cc = new ArrayList<String>();
    }
    this.cc.add(ccItem);
    return this;
  }

   /**
   * Get cc
   * @return cc
  **/
  @ApiModelProperty(value = "")
  public List<String> getCc() {
    return cc;
  }

  public void setCc(List<String> cc) {
    this.cc = cc;
  }

  public Email bcc(List<String> bcc) {
    this.bcc = bcc;
    return this;
  }

  public Email addBccItem(String bccItem) {
    if (this.bcc == null) {
      this.bcc = new ArrayList<String>();
    }
    this.bcc.add(bccItem);
    return this;
  }

   /**
   * Get bcc
   * @return bcc
  **/
  @ApiModelProperty(value = "")
  public List<String> getBcc() {
    return bcc;
  }

  public void setBcc(List<String> bcc) {
    this.bcc = bcc;
  }

  public Email attachments(List<EmailAttachments> attachments) {
    this.attachments = attachments;
    return this;
  }

  public Email addAttachmentsItem(EmailAttachments attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<EmailAttachments>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<EmailAttachments> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<EmailAttachments> attachments) {
    this.attachments = attachments;
  }

  public Email vars(Map<String, String> vars) {
    this.vars = vars;
    return this;
  }

  public Email putVarsItem(String key, String varsItem) {
    if (this.vars == null) {
      this.vars = new HashMap<String, String>();
    }
    this.vars.put(key, varsItem);
    return this;
  }

   /**
   * Get vars
   * @return vars
  **/
  @ApiModelProperty(example = "{\"user_id\":\"ea1fd1fd-8a4e-4e14-a8ad-ff06c6420ea1\",\"invoice_id\":\"3339d083-7cc9-4d2a-9c77-9b6e862c27b9\"}", value = "")
  public Map<String, String> getVars() {
    return vars;
  }

  public void setVars(Map<String, String> vars) {
    this.vars = vars;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Email email = (Email) o;
    return Objects.equals(this.html, email.html) &&
        Objects.equals(this.subject, email.subject) &&
        Objects.equals(this.fromEmail, email.fromEmail) &&
        Objects.equals(this.fromName, email.fromName) &&
        Objects.equals(this.globalMergeVars, email.globalMergeVars) &&
        Objects.equals(this.to, email.to) &&
        Objects.equals(this.cc, email.cc) &&
        Objects.equals(this.bcc, email.bcc) &&
        Objects.equals(this.attachments, email.attachments) &&
        Objects.equals(this.vars, email.vars);
  }

  @Override
  public int hashCode() {
    return Objects.hash(html, subject, fromEmail, fromName, globalMergeVars, to, cc, bcc, attachments, vars);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Email {\n");
    
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    fromEmail: ").append(toIndentedString(fromEmail)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    globalMergeVars: ").append(toIndentedString(globalMergeVars)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
    sb.append("    bcc: ").append(toIndentedString(bcc)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    vars: ").append(toIndentedString(vars)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

